services:
  # ********************
  # Telemetry Components
  # ********************

  # OpenTelemetry Collector
  otel-collector:
    # image: otel/opentelemetry-collector-contrib:latest
    # image: otel/opentelemetry-collector-contrib:0.82.0
    image: otel/opentelemetry-collector-contrib:0.113.0
    container_name: otel-collector
    restart: unless-stopped
    ports:
      - 13133:13133 # health_check extension
      - 4317:4317   # OTLP gRPC receiver
      - 4318:4318   # OTLP http receiver
      # - 55680:55680 # Prometheus metrics exposed by the collector
      # - 55681:55681 # # Prometheus exporter metrics
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # # Prometheus exporter metrics
    command: ['--config=/etc/otel-collector-config.yml']
    environment:
      - OTEL_COLLECTOR_HOST=${OTEL_COLLECTOR_HOST}
      - OTEL_COLLECTOR_PORT_GRPC=${OTEL_COLLECTOR_PORT_GRPC}
      - OTEL_COLLECTOR_PORT_HTTP=${OTEL_COLLECTOR_PORT_HTTP}
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    networks:
      - otel-network
  
  # Tempo (Traces)
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:2.6.1
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"

  tempo:
    # https://github.com/grafana/tempo/releases
    image: *tempoImage
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - tempo-storage:/tmp/tempo
    restart: unless-stopped
    ports:
      - 3200:3200  # tempo data source connection
      - 4007:4317  # receive traces from otel-collector 
    depends_on:
      - otel-collector
    networks:
      - otel-network

  # Prometheus (Metrics)
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - otel-collector
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-storage:/prometheus
    ports:
      - 9090:9090 # Prometheus data source connection
    networks:
      - otel-network

  # Grafana (Dashboard)
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3001:3000 # Grafana UI
    depends_on:
      - otel-collector
      - prometheus
      - tempo
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_LOG_LEVEL=info # default=info | options=debug, error, warning
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - otel-network

volumes:
  tempo-storage:
  prometheus-storage:
  grafana-storage:

networks:
  otel-network: